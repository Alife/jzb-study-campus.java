<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:y="http://www.yworks.com/demo" basedir="." default="help" name="yFiles-Demos">
<target name="help">
<echo>Demo specific targets:</echo>
<echo>SimpleDemo
    runs demo demo.view.SimpleDemo</echo>
<echo>BuildGraphDemo
    runs demo demo.view.BuildGraphDemo</echo>
<echo>ViewActionDemo
    runs demo demo.view.ViewActionDemo</echo>
<echo>LayoutDemo
    runs demo demo.view.layout.LayoutDemo</echo>
<echo>AssistantPlacerDemo
    runs demo demo.view.layout.tree.AssistantPlacerDemo</echo>
<echo>CollapsibleTreeDemo
    runs demo demo.view.layout.tree.CollapsibleTreeDemo</echo>
<echo>DendrogramLayouterDemo
    runs demo demo.view.layout.tree.DendrogramLayouterDemo</echo>
<echo>IncrementalTreeLayouterDemo
    runs demo demo.view.layout.tree.IncrementalTreeLayouterDemo</echo>
<echo>RotatableNodePlacersDemo
    runs demo demo.view.layout.tree.RotatableNodePlacersDemo</echo>
<echo>TreeLayoutConfigurationDemo
    runs demo demo.view.layout.tree.TreeLayoutConfigurationDemo</echo>
<echo>NavigationDemo
    runs demo demo.view.layout.organic.NavigationDemo</echo>
<echo>OrganicLayouterDemo
    runs demo demo.view.layout.organic.OrganicLayouterDemo</echo>
<echo>AnimatedNavigationDemo
    runs demo demo.view.layout.organic.AnimatedNavigationDemo</echo>
<echo>InteractiveOrganicDemo
    runs demo demo.view.layout.organic.InteractiveOrganicDemo</echo>
<echo>IncrementalHierarchicGroupDemo
    runs demo demo.view.layout.hierarchic.IncrementalHierarchicGroupDemo</echo>
<echo>FlowChartDemo
    runs demo demo.view.layout.hierarchic.FlowChartDemo</echo>
<echo>SimpleSwimLaneLayouterDemo
    runs demo demo.view.layout.hierarchic.SimpleSwimLaneLayouterDemo</echo>
<echo>HierarchicLayouterDemo
    runs demo demo.view.layout.hierarchic.HierarchicLayouterDemo</echo>
<echo>SimpleIncrementalHierarchicLayouterDemo
    runs demo demo.view.layout.hierarchic.SimpleIncrementalHierarchicLayouterDemo</echo>
<echo>IncrementalHierarchicLayouterDemo
    runs demo demo.view.layout.hierarchic.IncrementalHierarchicLayouterDemo</echo>
<echo>ConstraintLayererDemo
    runs demo demo.view.layout.hierarchic.ConstraintLayererDemo</echo>
<echo>EdgeRouterDemo
    runs demo demo.view.layout.router.EdgeRouterDemo</echo>
<echo>MazeRouterDemo
    runs demo demo.view.layout.router.MazeRouterDemo</echo>
<echo>LabelingDemo
    runs demo demo.view.layout.labeling.LabelingDemo</echo>
<echo>UMLClassDiagramLayouterDemo
    runs demo demo.view.layout.orthogonal.UMLClassDiagramLayouterDemo</echo>
<echo>GenericNodeRealizerDemo
    runs demo demo.view.realizer.GenericNodeRealizerDemo</echo>
<echo>CircleNodeRealizer
    runs demo demo.view.realizer.CircleNodeRealizer</echo>
<echo>GenericEdgeRealizerDemo
    runs demo demo.view.realizer.GenericEdgeRealizerDemo</echo>
<echo>YLabelConfigurationDemo
    runs demo demo.view.realizer.YLabelConfigurationDemo</echo>
<echo>NoteNodeRealizer
    runs demo demo.view.realizer.NoteNodeRealizer</echo>
<echo>ScrollingNodeRealizer
    runs demo demo.view.realizer.ScrollingNodeRealizer</echo>
<echo>UMLClassNodeRealizer
    runs demo demo.view.realizer.UMLClassNodeRealizer</echo>
<echo>BridgeEdgeRealizerDemo
    runs demo demo.view.realizer.BridgeEdgeRealizerDemo</echo>
<echo>StateNodeRealizer
    runs demo demo.view.realizer.StateNodeRealizer</echo>
<echo>StateNodeRealizerDemo
    runs demo demo.view.realizer.StateNodeRealizerDemo</echo>
<echo>SwingRendererDemo
    runs demo demo.view.realizer.SwingRendererDemo</echo>
<echo>RoundRectNodeRealizer
    runs demo demo.view.realizer.RoundRectNodeRealizer</echo>
<echo>VisualFeatureDemo
    runs demo demo.view.realizer.VisualFeatureDemo</echo>
<echo>PortsDemo
    runs demo demo.view.ports.PortsDemo</echo>
<echo>FixedPortsNodeRealizer
    runs demo demo.view.ports.FixedPortsNodeRealizer</echo>
<echo>EncoderFactory
    runs demo demo.view.ports.EncoderFactory</echo>
<echo>ParserFactory
    runs demo demo.view.ports.ParserFactory</echo>
<echo>BridgeDemo
    runs demo demo.view.rendering.BridgeDemo</echo>
<echo>BackgroundDemo
    runs demo demo.view.rendering.BackgroundDemo</echo>
<echo>DrawablesDemo
    runs demo demo.view.rendering.DrawablesDemo</echo>
<echo>EdgeConnectorDemo
    runs demo demo.view.advanced.EdgeConnectorDemo</echo>
<echo>UndoRedoDemo
    runs demo demo.view.advanced.UndoRedoDemo</echo>
<echo>ClipboardDemo
    runs demo demo.view.advanced.ClipboardDemo</echo>
<echo>DragAndDropDemo
    runs demo demo.view.advanced.DragAndDropDemo</echo>
<echo>InactiveLayerDemo
    runs demo demo.view.advanced.InactiveLayerDemo</echo>
<echo>PrintPreviewDemo
    runs demo demo.view.advanced.PrintPreviewDemo</echo>
<echo>MagnifierViewModeDemo
    runs demo demo.view.viewmode.MagnifierViewModeDemo</echo>
<echo>MouseInputDemo
    runs demo demo.view.viewmode.MouseInputDemo</echo>
<echo>PopupModeDemo
    runs demo demo.view.viewmode.PopupModeDemo</echo>
<echo>CreateEdgeModeDemo
    runs demo demo.view.viewmode.CreateEdgeModeDemo</echo>
<echo>OrthogonalEdgeViewModeDemo
    runs demo demo.view.viewmode.OrthogonalEdgeViewModeDemo</echo>
<echo>PortCreateEdgeModeDemo
    runs demo demo.view.viewmode.PortCreateEdgeModeDemo</echo>
<echo>HierarchyDemo
    runs demo demo.view.hierarchy.HierarchyDemo</echo>
<echo>AnimationEffectsDemo
    runs demo demo.view.anim.AnimationEffectsDemo</echo>
<echo>FadeInFadeOutDemo
    runs demo demo.view.anim.FadeInFadeOutDemo</echo>
<echo>LabelAnimationDemo
    runs demo demo.view.anim.LabelAnimationDemo</echo>
<echo>EaseInEaseOutDemo
    runs demo demo.view.anim.EaseInEaseOutDemo</echo>
<echo>LayoutModuleDemo
    runs demo demo.module.LayoutModuleDemo</echo>
<echo>DiagonalLayoutModule
    runs demo demo.module.DiagonalLayoutModule</echo>
<echo>CircularLayoutModule
    runs demo demo.module.CircularLayoutModule</echo>
<echo>HierarchicLayoutModule
    runs demo demo.module.HierarchicLayoutModule</echo>
<echo>IncrementalHierarchicLayoutModule
    runs demo demo.module.IncrementalHierarchicLayoutModule</echo>
<echo>OrganicLayoutModule
    runs demo demo.module.OrganicLayoutModule</echo>
<echo>OrthogonalLayoutModule
    runs demo demo.module.OrthogonalLayoutModule</echo>
<echo>OrthogonalEdgeRouterModule
    runs demo demo.module.OrthogonalEdgeRouterModule</echo>
<echo>TreeLayoutModule
    runs demo demo.module.TreeLayoutModule</echo>
<echo>LabelingModule
    runs demo demo.module.LabelingModule</echo>
<echo>ListDemo
    runs demo demo.base.ListDemo</echo>
<echo>GraphDemo
    runs demo demo.base.GraphDemo</echo>
<echo>NodeMapTest
    runs demo demo.base.NodeMapTest</echo>
<echo>ExtendedGraph
    runs demo demo.base.ExtendedGraph</echo>
<echo>RandomGraphGenerator
    runs demo demo.base.RandomGraphGenerator</echo>
<echo>CyclesTest
    runs demo demo.algo.CyclesTest</echo>
<echo>GraphConnectivityTest
    runs demo demo.algo.GraphConnectivityTest</echo>
<echo>SpanningTreeTest
    runs demo demo.algo.SpanningTreeTest</echo>
<echo>ShortestPathTest
    runs demo demo.algo.ShortestPathTest</echo>
<echo>ShortestPathDemo
    runs demo demo.algo.ShortestPathDemo</echo>
<echo>TopologicalTest
    runs demo demo.algo.TopologicalTest</echo>
<echo>TopologicalSortDemo
    runs demo demo.algo.TopologicalSortDemo</echo>
<echo>DiagonalLayouter
    runs demo demo.layout.DiagonalLayouter</echo>
<echo>LayoutWithoutAView
    runs demo demo.layout.LayoutWithoutAView</echo>
<echo>GroupingLayoutWithoutAView
    runs demo demo.layout.GroupingLayoutWithoutAView</echo>
<echo>IncrementalLayoutWithoutAView
    runs demo demo.layout.IncrementalLayoutWithoutAView</echo>
<echo>SwimLaneLayoutWithoutAView
    runs demo demo.layout.SwimLaneLayoutWithoutAView</echo>
<echo>RecursiveGroupLayouterDemo
    runs demo demo.layout.RecursiveGroupLayouterDemo</echo>
<echo>SimpleGMLDemo
    runs demo demo.io.SimpleGMLDemo</echo>
<echo>CustomGMLDemo
    runs demo demo.io.CustomGMLDemo</echo>
<echo>GraphFormatConverter
    runs demo demo.io.GraphFormatConverter</echo>
<echo>ImageMapDemo
    runs demo demo.io.ImageMapDemo</echo>
<echo>TiledImageDemo
    runs demo demo.io.TiledImageDemo</echo>
<echo>NodePropertyEditorDemo
    runs demo demo.option.NodePropertyEditorDemo</echo>
<echo>OptionHandlerDemo
    runs demo demo.option.OptionHandlerDemo</echo>
<echo/>
<echo/>
<echo>General targets:</echo>
<echo>touch
    touches all demo .java files</echo>
<echo>clean
    removes all that has been built</echo>
<echo>compile
    compiles the demo packages</echo>
<echo/>
<echo>run
    launches the interactive Demo Browser</echo>
</target>
<target name="-init">
<property value=".." name="demo.src.dir"/>
<property value="../../classes" name="demo.class.dir"/>
<property value="../../lib/y.jar" name="y.jar"/>
<property value="../../doc/api" name="doc.dir"/>
<condition property="jdk1.3">
<equals arg1="${ant.java.version}" arg2="1.3"/>
</condition>
<path id="democlasspath">
<pathelement location="${demo.class.dir}"/>
<pathelement location="${demo.src.dir}"/>
<pathelement location="${y.jar}"/>
</path>
</target>
<target description="Compiles the demo files" depends="-init" name="compile">
<mkdir dir="${demo.class.dir}"/>
<javac debug="true" srcdir="${demo.src.dir}" destdir="${demo.class.dir}" includes="demo/**/*.java" includeAntRuntime="false">
<classpath>
<pathelement location="${y.jar}"/>
</classpath>
<exclude if="jdk1.3" name="demo/browser/**"/>
<exclude if="jdk1.3" name="demo/DemoBrowser.java"/>
</javac>
</target>
<target unless="jdk1.3" description="Launches the interactive Demo Browser" depends="compile" name="run">
<java failonerror="true" classname="demo.DemoBrowser" fork="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="SimpleDemo" depends="compile">
<java classname="demo.view.SimpleDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="BuildGraphDemo" depends="compile">
<java classname="demo.view.BuildGraphDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ViewActionDemo" depends="compile">
<java classname="demo.view.ViewActionDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="LayoutDemo" depends="compile">
<java classname="demo.view.layout.LayoutDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="AssistantPlacerDemo" depends="compile">
<java classname="demo.view.layout.tree.AssistantPlacerDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="CollapsibleTreeDemo" depends="compile">
<java classname="demo.view.layout.tree.CollapsibleTreeDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="DendrogramLayouterDemo" depends="compile">
<java classname="demo.view.layout.tree.DendrogramLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="IncrementalTreeLayouterDemo" depends="compile">
<java classname="demo.view.layout.tree.IncrementalTreeLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="RotatableNodePlacersDemo" depends="compile">
<java classname="demo.view.layout.tree.RotatableNodePlacersDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="TreeLayoutConfigurationDemo" depends="compile">
<java classname="demo.view.layout.tree.TreeLayoutConfigurationDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="NavigationDemo" depends="compile">
<java classname="demo.view.layout.organic.NavigationDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="OrganicLayouterDemo" depends="compile">
<java classname="demo.view.layout.organic.OrganicLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="AnimatedNavigationDemo" depends="compile">
<java classname="demo.view.layout.organic.AnimatedNavigationDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="InteractiveOrganicDemo" depends="compile">
<java classname="demo.view.layout.organic.InteractiveOrganicDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="IncrementalHierarchicGroupDemo" depends="compile">
<java classname="demo.view.layout.hierarchic.IncrementalHierarchicGroupDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="FlowChartDemo" depends="compile">
<java classname="demo.view.layout.hierarchic.FlowChartDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="SimpleSwimLaneLayouterDemo" depends="compile">
<java classname="demo.view.layout.hierarchic.SimpleSwimLaneLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="HierarchicLayouterDemo" depends="compile">
<java classname="demo.view.layout.hierarchic.HierarchicLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="SimpleIncrementalHierarchicLayouterDemo" depends="compile">
<java classname="demo.view.layout.hierarchic.SimpleIncrementalHierarchicLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="IncrementalHierarchicLayouterDemo" depends="compile">
<java classname="demo.view.layout.hierarchic.IncrementalHierarchicLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ConstraintLayererDemo" depends="compile">
<java classname="demo.view.layout.hierarchic.ConstraintLayererDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="EdgeRouterDemo" depends="compile">
<java classname="demo.view.layout.router.EdgeRouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="MazeRouterDemo" depends="compile">
<java classname="demo.view.layout.router.MazeRouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="LabelingDemo" depends="compile">
<java classname="demo.view.layout.labeling.LabelingDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="UMLClassDiagramLayouterDemo" depends="compile">
<java classname="demo.view.layout.orthogonal.UMLClassDiagramLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="GenericNodeRealizerDemo" depends="compile">
<java classname="demo.view.realizer.GenericNodeRealizerDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="CircleNodeRealizer" depends="compile">
<java classname="demo.view.realizer.CircleNodeRealizer" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="GenericEdgeRealizerDemo" depends="compile">
<java classname="demo.view.realizer.GenericEdgeRealizerDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="YLabelConfigurationDemo" depends="compile">
<java classname="demo.view.realizer.YLabelConfigurationDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="NoteNodeRealizer" depends="compile">
<java classname="demo.view.realizer.NoteNodeRealizer" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ScrollingNodeRealizer" depends="compile">
<java classname="demo.view.realizer.ScrollingNodeRealizer" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="UMLClassNodeRealizer" depends="compile">
<java classname="demo.view.realizer.UMLClassNodeRealizer" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="BridgeEdgeRealizerDemo" depends="compile">
<java classname="demo.view.realizer.BridgeEdgeRealizerDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="StateNodeRealizer" depends="compile">
<java classname="demo.view.realizer.StateNodeRealizer" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="StateNodeRealizerDemo" depends="compile">
<java classname="demo.view.realizer.StateNodeRealizerDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="SwingRendererDemo" depends="compile">
<java classname="demo.view.realizer.SwingRendererDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="RoundRectNodeRealizer" depends="compile">
<java classname="demo.view.realizer.RoundRectNodeRealizer" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="VisualFeatureDemo" depends="compile">
<java classname="demo.view.realizer.VisualFeatureDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="PortsDemo" depends="compile">
<java classname="demo.view.ports.PortsDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="FixedPortsNodeRealizer" depends="compile">
<java classname="demo.view.ports.FixedPortsNodeRealizer" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="EncoderFactory" depends="compile">
<java classname="demo.view.ports.EncoderFactory" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ParserFactory" depends="compile">
<java classname="demo.view.ports.ParserFactory" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="BridgeDemo" depends="compile">
<java classname="demo.view.rendering.BridgeDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="BackgroundDemo" depends="compile">
<java classname="demo.view.rendering.BackgroundDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="DrawablesDemo" depends="compile">
<java classname="demo.view.rendering.DrawablesDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="EdgeConnectorDemo" depends="compile">
<java classname="demo.view.advanced.EdgeConnectorDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="UndoRedoDemo" depends="compile">
<java classname="demo.view.advanced.UndoRedoDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ClipboardDemo" depends="compile">
<java classname="demo.view.advanced.ClipboardDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="DragAndDropDemo" depends="compile">
<java classname="demo.view.advanced.DragAndDropDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="InactiveLayerDemo" depends="compile">
<java classname="demo.view.advanced.InactiveLayerDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="PrintPreviewDemo" depends="compile">
<java classname="demo.view.advanced.PrintPreviewDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="MagnifierViewModeDemo" depends="compile">
<java classname="demo.view.viewmode.MagnifierViewModeDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="MouseInputDemo" depends="compile">
<java classname="demo.view.viewmode.MouseInputDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="PopupModeDemo" depends="compile">
<java classname="demo.view.viewmode.PopupModeDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="CreateEdgeModeDemo" depends="compile">
<java classname="demo.view.viewmode.CreateEdgeModeDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="OrthogonalEdgeViewModeDemo" depends="compile">
<java classname="demo.view.viewmode.OrthogonalEdgeViewModeDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="PortCreateEdgeModeDemo" depends="compile">
<java classname="demo.view.viewmode.PortCreateEdgeModeDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="HierarchyDemo" depends="compile">
<java classname="demo.view.hierarchy.HierarchyDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="AnimationEffectsDemo" depends="compile">
<java classname="demo.view.anim.AnimationEffectsDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="FadeInFadeOutDemo" depends="compile">
<java classname="demo.view.anim.FadeInFadeOutDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="LabelAnimationDemo" depends="compile">
<java classname="demo.view.anim.LabelAnimationDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="EaseInEaseOutDemo" depends="compile">
<java classname="demo.view.anim.EaseInEaseOutDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="LayoutModuleDemo" depends="compile">
<java classname="demo.module.LayoutModuleDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="DiagonalLayoutModule" depends="compile">
<java classname="demo.module.DiagonalLayoutModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="CircularLayoutModule" depends="compile">
<java classname="demo.module.CircularLayoutModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="HierarchicLayoutModule" depends="compile">
<java classname="demo.module.HierarchicLayoutModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="IncrementalHierarchicLayoutModule" depends="compile">
<java classname="demo.module.IncrementalHierarchicLayoutModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="OrganicLayoutModule" depends="compile">
<java classname="demo.module.OrganicLayoutModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="OrthogonalLayoutModule" depends="compile">
<java classname="demo.module.OrthogonalLayoutModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="OrthogonalEdgeRouterModule" depends="compile">
<java classname="demo.module.OrthogonalEdgeRouterModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="TreeLayoutModule" depends="compile">
<java classname="demo.module.TreeLayoutModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="LabelingModule" depends="compile">
<java classname="demo.module.LabelingModule" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ListDemo" depends="compile">
<java classname="demo.base.ListDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="GraphDemo" depends="compile">
<java classname="demo.base.GraphDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="NodeMapTest" depends="compile">
<java classname="demo.base.NodeMapTest" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ExtendedGraph" depends="compile">
<java classname="demo.base.ExtendedGraph" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="RandomGraphGenerator" depends="compile">
<java classname="demo.base.RandomGraphGenerator" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="CyclesTest" depends="compile">
<java classname="demo.algo.CyclesTest" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="GraphConnectivityTest" depends="compile">
<java classname="demo.algo.GraphConnectivityTest" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="SpanningTreeTest" depends="compile">
<java classname="demo.algo.SpanningTreeTest" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ShortestPathTest" depends="compile">
<java classname="demo.algo.ShortestPathTest" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ShortestPathDemo" depends="compile">
<java classname="demo.algo.ShortestPathDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="TopologicalTest" depends="compile">
<java classname="demo.algo.TopologicalTest" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="TopologicalSortDemo" depends="compile">
<java classname="demo.algo.TopologicalSortDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="DiagonalLayouter" depends="compile">
<java classname="demo.layout.DiagonalLayouter" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="LayoutWithoutAView" depends="compile">
<java classname="demo.layout.LayoutWithoutAView" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="GroupingLayoutWithoutAView" depends="compile">
<java classname="demo.layout.GroupingLayoutWithoutAView" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="IncrementalLayoutWithoutAView" depends="compile">
<java classname="demo.layout.IncrementalLayoutWithoutAView" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="SwimLaneLayoutWithoutAView" depends="compile">
<java classname="demo.layout.SwimLaneLayoutWithoutAView" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="RecursiveGroupLayouterDemo" depends="compile">
<java classname="demo.layout.RecursiveGroupLayouterDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="SimpleGMLDemo" depends="compile">
<java classname="demo.io.SimpleGMLDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="CustomGMLDemo" depends="compile">
<java classname="demo.io.CustomGMLDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="GraphFormatConverter" depends="compile">
<java classname="demo.io.GraphFormatConverter" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="ImageMapDemo" depends="compile">
<java classname="demo.io.ImageMapDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="TiledImageDemo" depends="compile">
<java classname="demo.io.TiledImageDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="NodePropertyEditorDemo" depends="compile">
<java classname="demo.option.NodePropertyEditorDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target name="OptionHandlerDemo" depends="compile">
<java classname="demo.option.OptionHandlerDemo" fork="true" failonerror="true">
<classpath refid="democlasspath"/>
</java>
</target>
<target description="Touches the .java files of the demos" depends="-init" name="touch-demo">
<touch>
<fileset dir="${demo.src.dir}" includes="**/*.java"/>
</touch>
</target>
<target description="Removes all that has been built." depends="-init" name="clean">
<delete dir="${demo.class.dir}" includeEmptyDirs="true"/>
</target>
</project>
